name: Test & Quality

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_DB: bloomhabit_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json

    - name: Install backend dependencies
      run: cd backend && npm ci

    - name: Run backend linting
      run: cd backend && npm run lint:check

    - name: Run backend unit tests
      run: cd backend && npm run test:unit

    - name: Run backend integration tests
      run: cd backend && npm run test:integration

    - name: Run backend E2E tests
      run: cd backend && npm run test:e2e

    - name: Upload backend coverage
      uses: codecov/codecov-action@v3
      with:
        file: backend/coverage/lcov.info
        flags: backend
        name: backend-coverage

  frontend-tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install frontend dependencies
      run: cd frontend && npm ci

    - name: Run frontend linting
      run: cd frontend && npm run lint

    - name: Run frontend type check
      run: cd frontend && npm run type-check

    - name: Run frontend unit tests
      run: cd frontend && npm run test

    - name: Run frontend E2E tests
      run: cd frontend && npm run test:e2e

    - name: Upload frontend coverage
      uses: codecov/codecov-action@v3
      with:
        file: frontend/coverage/lcov.info
        flags: frontend
        name: frontend-coverage

  mobile-tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: mobile/package-lock.json

    - name: Install mobile dependencies
      run: cd mobile && npm ci

    - name: Run mobile linting
      run: cd mobile && npm run lint

    - name: Run mobile type check
      run: cd mobile && npm run type-check

    - name: Run mobile unit tests
      run: cd mobile && npm run test

  quality-gates:
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests, mobile-tests]
    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Check test results
      run: |
        echo "All tests completed successfully!"
        echo "Quality gates passed!"

    - name: Generate test report
      run: |
        echo "## Test Results" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Backend tests passed" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Frontend tests passed" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Mobile tests passed" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Code quality checks passed" >> $GITHUB_STEP_SUMMARY
